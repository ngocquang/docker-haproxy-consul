global
        chroot /var/lib/haproxy
        user haproxy
        group haproxy

        maxconn 2048

        tune.ssl.default-dh-param 2048

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        mode http
        option forwardfor
        option http-server-close
        timeout connect 5000
        timeout client 50000
        timeout server 50000

listen stats
{{ if env "HAPROXY_BIND_1940" }}
        bind *:1940
{{ end }}
{{ if env "HAPROXY_BIND_SSL" }}
  {{ $haproxy_bind_ssl := env "HAPROXY_BIND_SSL"}}
        bind *:443 ssl crt {{ $haproxy_bind_ssl }}
{{ end }}
        stats enable
        stats uri /haproxy?stats
        stats hide-version
{{ if env "HARPROXY_STATS_USER" }}
  {{ $haproxy_stats_user := env "HARPROXY_STATS_USER"}}
  {{ $haproxy_stats_pass := env "HARPROXY_STATS_PASS"}}
        stats realm Haproxy\ Statistics
        stats auth {{ $haproxy_stats_user }}:{{ $haproxy_stats_pass }}
{{ end }}

frontend www
        bind *:80
{{ if env "HAPROXY_BIND_SSL" }}
    {{ $haproxy_bind_ssl := env "HAPROXY_BIND_SSL"}}
        bind *:443 ssl crt {{ $haproxy_bind_ssl }}
        reqadd X-Forwarded-Proto:\ https
{{ end }}

# generated by consul-template
{{ range services }}
  {{ $service := . }}
        acl host_{{ $service.Name }} hdr(host) -i {{ $service.Name | replaceAll "_" "." }}
  {{ if env "HAPROXY_DOMAIN" }}
    {{ $haproxy_domain := env "HAPROXY_DOMAIN" | split ":" }}
    {{ range $haproxy_domain }}
        acl host_{{ $service.Name }} hdr(host) -i {{ $service.Name | replaceAll "_" "." }}.{{ . }}
    {{ end }}
  {{ end }}
  {{ range .Tags }}
    {{ if . | regexMatch "server_alias=" }}
        acl host_{{ $service.Name }} hdr(host) -i {{ . | regexReplaceAll ".*=" "" }}
    {{ end }}
    {{ if . | regexMatch "path_alias=" }}
        #acl host_{{ $service.Name }} path_beg -i {{ . | regexReplaceAll ".*=" "" }}
        acl host_{{ $service.Name }} url_reg ^\{{ . | regexReplaceAll ".*=" "" }}/.*
    {{ end }}
  {{ end }}

        use_backend {{ .Name }}_backend if host_{{ .Name }}

{{ end }}
{{ if env "HAPROXY_BACKEND_DEFAULT" }}
  {{ $haproxy_default := env "HAPROXY_BACKEND_DEFAULT" }}
        default_backend {{ $haproxy_default }}_backend

{{ end }}

{{ range services }}
backend {{ .Name }}_backend
  #redirect scheme https if !{ ssl_fc }
  balance roundrobin
  {{ if .Tags | contains "sticky_session" }}
      # sticky
  {{ end }}
  {{ range .Tags }}
    {{ if . | regexMatch "path_alias=" }}
        reqrep ^([^\ :]*)\ {{ . | regexReplaceAll ".*=" "" }}/(.*) \1\ /\2
    {{ end }}
  {{ end }}
  {{ range service .Name }}
        server {{ .ID }} {{ .Address }}:{{ .Port }}  check port 80
  {{ end }}
{{ end }}
